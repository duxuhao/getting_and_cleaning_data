#Merges the training and the test sets to create one data set.

X_train <- read.table("train//X_train.txt")
y_train <- read.table("train//y_train.txt")
subject_train <- read.table("train//subject_train.txt")
X_test <- read.table("test//X_test.txt")
y_test <- read.table("test//y_test.txt")
subject_test <- read.table("test//subject_test.txt")

features <- read.table("features.txt")

activity_labels <- read.table("activity_labels.txt")

X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
subject <- rbind(subject_train, subject_test)
Dataset <- cbind(subject, X, y)
colnames(X) <- features[,2]

#Extracts only the measurements on the mean and standard deviation for each measurement

XMeanStd <- X[grepl("mean\\(\\)|std\\(\\)",names(X))]

#Uses descriptive activity names to name the activities in the data set
for (n in 1:5) {
	y[y == n] = as.character(activity_labels[n,2])
}

#Appropriately labels the data set with descriptive variable names.

colnames(y) <- "labels"
colnames(subject) <- "subjects"

#From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.

New <- cbind(subject, y, XMeanStd)

AverageData <- aggregate(New[, 3:ncol(New)],by=list(subjects = New$subjects, labels = New$labels),mean)
for (n in c("1","2","3","4","5","6")) {
	AverageData[AverageData$label == n,2] = as.character(activity_labels[n,2])
}
# write the data for course upload
write.table(format(AverageData, scientific=T), "tidyDataSet2.txt", row.names=F)
}

